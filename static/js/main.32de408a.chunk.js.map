{"version":3,"sources":["Components/featureFlags.js","redux/reducers/index.js","redux/store.js","Components/FeatureFlagsUICore.jsx","Components/FeatureFlagsUI.jsx","Components/FeatureFlagsReduxUI.jsx","testPages/Home.jsx","testPages/Version.jsx","testPages/FourOhFour.jsx","Components/index.jsx","FeatureFlagsConfig.js","testPages/FeatureFlag.jsx","testPages/FeatureFlagRedux.jsx","App.jsx","index.jsx"],"names":["FEATURE_FLAGS","FEATURE_FLAGS_ADD","FEATURE_FLAG_EDIT","FEATURE_FLAGS_RESET","loadFeatureFlags","featureArray","useRedux","callback","envVariable","flagArray","map","flag","id","active","description","original","fromProcessEnv","process","envFlagOverRides","JSON","parse","forEach","index","findIndex","f","push","newFlag","existing","type","payload","localStorage","setItem","stringify","editFeatureFlag","features","getItem","newFeatures","resetFeatureFlags","reducerFeatureFlags","state","flags","action","newFlags","getFeatures","isFeatureActive","featuresFromRedux","newFeature","find","undefined","combineReducers","persistConfig","key","storage","stateReconciler","autoMergeLevel2","exportCreateStore","createStore","rootReducer","composeWithDevTools","REACT_APP_USE_LOCAL_STORAGE","persistedReducer","persistReducer","reactstrapAvailable","CustomInput","Button","Container","Row","Col","reactstrap","require","e","FeatureFlagsUICore","props","featureClick","bind","featureReset","inuse","onFeatureClick","this","onFeatureReset","readonly","feature","style","fontWeight","className","name","label","checked","disabled","onChange","target","marginTop","marginBottom","color","onClick","container","React","Component","defaultProps","FeatureFlagsUI","featureChange","onFeatureChange","connect","reduxLoaded","FeatureFlagsReduxUI","resetFeatures","edit","reset","dispatch","Home","Jumbotron","Version","FourOhFour","get","isActive","COLORS","DINOS","FRUITS","VEGGIES","featureFlagsRedux","featureFlagsLocalStorage","FeatureFlags","colorList","dinoList","FeatureFlagRedux","fruitsList","veggieList","buildNav","Nav","NavItem","activeClassName","to","App","reRenderApp","loadFeatureToRedux","forceUpdate","basename","path","exact","store","configureStore","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.32de408a.chunk.js","sourcesContent":["export const FEATURE_FLAGS = 'featureFlags'; // key used in local storage\nexport const FEATURE_FLAGS_ADD = 'featureFlagsAdd';\nexport const FEATURE_FLAG_EDIT = 'featureFlagsEdit';\nexport const FEATURE_FLAGS_RESET = 'featureFlagsReset';\n\n/* ************** ACTIONS *************** */\nexport const loadFeatureFlags = (\n  featureArray = [],\n  useRedux = false,\n  callback = () => {},\n  envVariable = 'REACT_APP_FEATURE_FLAGS'\n) => {\n  let flagArray = [];\n\n  flagArray = featureArray.map((flag) => ({\n    id: flag.id,\n    active: flag.active || false,\n    description: flag.description,\n    original: flag.active || false,\n  }));\n\n  // eslint-disable-next-line no-unused-vars\n  const fromProcessEnv = process.env[envVariable];\n  const envFlagOverRides = fromProcessEnv ? JSON.parse(fromProcessEnv) : [];\n  envFlagOverRides.forEach((flag) => {\n    const index = flagArray.findIndex((f) => f.id === flag.id);\n    if (index === -1) {\n      flagArray.push({\n        id: flag.id,\n        active: flag.active || false,\n        description: flag.description,\n        original: flag.active || false,\n      });\n    } else {\n      const newFlag = { ...flag };\n      const existing = flagArray[index];\n      newFlag.description = flag.description || existing.description;\n      newFlag.active = flag.active || existing.active;\n      newFlag.original = newFlag.active;\n      flagArray[index] = newFlag;\n    }\n  });\n  if (useRedux) {\n    return { type: FEATURE_FLAGS_ADD, payload: flagArray };\n  }\n  callback(flagArray);\n  return localStorage.setItem(FEATURE_FLAGS, JSON.stringify(flagArray));\n};\n\nexport const editFeatureFlag = (id, active, useRedux = false) => {\n  if (useRedux) {\n    return { type: FEATURE_FLAG_EDIT, payload: { id, active } };\n  }\n  const features = JSON.parse(localStorage.getItem(FEATURE_FLAGS));\n  const newFeatures = features.map((flag) => {\n    if (flag.id === id) {\n      const newFlag = { ...flag, active };\n      return newFlag;\n    }\n    return flag;\n  });\n  localStorage.setItem(FEATURE_FLAGS, JSON.stringify(newFeatures));\n  return newFeatures;\n};\n\nexport const resetFeatureFlags = (useRedux = false) => {\n  if (useRedux) {\n    return { type: FEATURE_FLAGS_RESET };\n  }\n  const features = JSON.parse(localStorage.getItem(FEATURE_FLAGS));\n  const newFeatures = features.map((flag) => ({\n    ...flag,\n    active: flag.original,\n  }));\n  localStorage.setItem(FEATURE_FLAGS, JSON.stringify(newFeatures));\n  return newFeatures;\n};\n\n/* ************** REDUCERS *************** */\nexport const reducerFeatureFlags = (state = { flags: [] }, action) => {\n  switch (action.type) {\n    case FEATURE_FLAGS_ADD: {\n      return { ...state, flags: action.payload };\n    }\n    case FEATURE_FLAG_EDIT: {\n      const { id, active } = action.payload;\n      const newFlags = [...state.flags];\n      const index = newFlags.findIndex((flag) => flag.id === id);\n\n      if (index === -1) {\n        return state;\n      }\n      newFlags[index].active = active;\n      return { ...state, flags: newFlags };\n    }\n    case FEATURE_FLAGS_RESET: {\n      const newFlags = state.flags.map((flag) => ({\n        ...flag,\n        active: flag.original,\n      }));\n      return { ...state, flags: newFlags };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\n/* ******************* SELECTORS ************************ */\nexport const getFeatures = (state = null) => {\n  if (state === null) {\n    return JSON.parse(localStorage.getItem(FEATURE_FLAGS));\n  }\n  return state.reducerFeatureFlags.flags;\n};\n\nexport const isFeatureActive = (id, featuresFromRedux = null) => {\n  let features = featuresFromRedux;\n  if (features === null) {\n    features = getFeatures();\n  }\n  if (!features) return undefined;\n  const newFeature = features.find((flag) => flag.id === id);\n\n  return newFeature === undefined ? undefined : newFeature.active;\n};\n","/* eslint-disable import/no-extraneous-dependencies */\nimport { combineReducers } from 'redux';\nimport { reducerFeatureFlags } from '../../Components/featureFlags';\n\n// Import each reducer and then add it to the object param of combineReducers.\n\nexport default combineReducers({ reducerFeatureFlags });\n","/* eslint-disable import/no-mutable-exports */\n/* eslint-disable import/no-extraneous-dependencies */\n/*\nThis file creates the redux store. \nThere normally isn't a need to modify this file\n*/\n\nimport { createStore } from 'redux';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './reducers/index';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  stateReconciler: autoMergeLevel2,\n};\n\nlet exportCreateStore = createStore(\n  rootReducer,\n  // composeWithDevTools(applyMiddleware(thunk))\n  composeWithDevTools()\n);\n\nif (process.env.REACT_APP_USE_LOCAL_STORAGE === 'true') {\n  const persistedReducer = persistReducer(persistConfig, rootReducer);\n  exportCreateStore = () =>\n    // createStore(persistedReducer, composeWithDevTools(applyMiddleware(thunk)));\n    createStore(persistedReducer, composeWithDevTools());\n}\nexport default exportCreateStore;\n","/* eslint-disable global-require */\n/* eslint-disable import/no-extraneous-dependencies */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nlet reactstrapAvailable = false;\nlet CustomInput = () => <div />;\nlet Button = () => <div />;\nlet Container = () => <div />;\nlet Row = () => <div />;\nlet Col = () => <div />;\n\ntry {\n  const reactstrap = require('reactstrap');\n  CustomInput = reactstrap.CustomInput;\n  Button = reactstrap.Button;\n  Container = reactstrap.Container;\n  Row = reactstrap.Row;\n  Col = reactstrap.Col;\n  reactstrapAvailable = true;\n  // eslint-disable-next-line no-empty\n} catch (e) {}\n\nexport default class FeatureFlagsUICore extends React.Component {\n  constructor(props) {\n    super(props);\n    // this.state = { features: props.features };\n    this.featureClick = this.featureClick.bind(this);\n    this.featureReset = this.featureReset.bind(this);\n  }\n\n  featureClick(id, inuse) {\n    const { onFeatureClick } = this.props;\n    onFeatureClick(id, inuse);\n  }\n\n  featureReset() {\n    const { onFeatureReset } = this.props;\n    onFeatureReset();\n  }\n\n  container() {\n    if (reactstrapAvailable === false) {\n      return <div>Reactstrap is needed to render the feature flags UI</div>;\n    }\n    const { features, readonly } = this.props;\n    return (\n      <Container>\n        <Row>\n          <Col>\n            <h2>Feature Flags</h2>\n            {features &&\n              features.map((feature) => (\n                <div\n                  key={feature.id}\n                  style={{ fontWeight: feature.active ? 'bold' : '' }}\n                  className='customInputItem'\n                >\n                  <CustomInput\n                    type='switch'\n                    id={feature.id}\n                    name='customSwitch'\n                    label={feature.description}\n                    checked={feature.active}\n                    disabled={readonly}\n                    onChange={(e) => {\n                      this.featureClick(feature.id, e.target.checked);\n                    }}\n                  />\n                </div>\n              ))}\n            <div style={{ marginTop: '20px', marginBottom: '20px' }}>\n              {readonly ? null : (\n                <Button\n                  id='resetFeatureFlags'\n                  color='success'\n                  onClick={() => {\n                    this.featureReset();\n                  }}\n                >\n                  Reset Flags\n                </Button>\n              )}\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n\n  render() {\n    return this.container();\n  }\n}\n\nFeatureFlagsUICore.propTypes = {\n  features: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      description: PropTypes.string,\n      inuse: PropTypes.bool,\n      original: PropTypes.bool,\n    })\n  ),\n  onFeatureClick: PropTypes.func,\n  onFeatureReset: PropTypes.func,\n  readonly: PropTypes.bool,\n};\nFeatureFlagsUICore.defaultProps = {\n  features: [],\n  onFeatureClick: () => {},\n  onFeatureReset: () => {},\n  readonly: false,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FeatureFlagsCore from './FeatureFlagsUICore';\nimport {\n  editFeatureFlag,\n  resetFeatureFlags,\n  getFeatures,\n} from './featureFlags';\n\nexport default class FeatureFlagsUI extends React.Component {\n  constructor(props) {\n    super(props);\n    this.featureChange = this.featureChange.bind(this);\n    this.featureReset = this.featureReset.bind(this);\n  }\n\n  featureChange(id, checked) {\n    const { onFeatureChange } = this.props;\n    editFeatureFlag(id, checked);\n    onFeatureChange(this.features());\n  }\n\n  featureReset() {\n    const { onFeatureChange } = this.props;\n    resetFeatureFlags();\n    onFeatureChange(this.features());\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  features() {\n    return getFeatures();\n  }\n\n  render() {\n    const { readonly } = this.props;\n    return (\n      <FeatureFlagsCore\n        onFeatureClick={this.featureChange}\n        onFeatureReset={this.featureReset}\n        features={this.features()}\n        readonly={readonly}\n      />\n    );\n  }\n}\n\nFeatureFlagsUI.propTypes = {\n  onFeatureChange: PropTypes.func,\n  readonly: PropTypes.bool,\n};\nFeatureFlagsUI.defaultProps = { onFeatureChange: () => {}, readonly: false };\n","/* eslint-disable global-require */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FeatureFlagsCore from './FeatureFlagsUICore';\nimport {\n  getFeatures,\n  editFeatureFlag,\n  resetFeatureFlags,\n} from './featureFlags';\n\nlet reduxLoaded = false;\nlet connect;\ntry {\n  const redux = require('react-redux');\n  connect = redux.connect;\n  reduxLoaded = true;\n  // eslint-disable-next-line no-empty\n} catch (e) {}\n\nclass FeatureFlagsReduxUI extends React.Component {\n  constructor(props) {\n    super(props);\n    this.featureChange = this.featureChange.bind(this);\n    this.resetFeatures = this.resetFeatures.bind(this);\n    this.state = {};\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  featureChange(id, checked) {\n    const { edit, onFeatureChange, flags } = this.props;\n    edit(id, checked);\n    onFeatureChange(flags);\n  }\n\n  resetFeatures() {\n    const { reset, onFeatureChange, flags } = this.props;\n    reset(onFeatureChange(flags));\n  }\n\n  render() {\n    const { flags, readonly } = this.props;\n    return (\n      <FeatureFlagsCore\n        features={flags}\n        onFeatureClick={this.featureChange}\n        onFeatureReset={this.resetFeatures}\n        readonly={readonly}\n      />\n    );\n  }\n}\n\nFeatureFlagsReduxUI.propTypes = {\n  onFeatureChange: PropTypes.func,\n  edit: PropTypes.func.isRequired,\n  reset: PropTypes.func.isRequired,\n  flags: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      inuse: PropTypes.bool,\n      description: PropTypes.string,\n      original: PropTypes.bool,\n    })\n  ).isRequired,\n  readonly: PropTypes.bool,\n};\nFeatureFlagsReduxUI.defaultProps = {\n  onFeatureChange: () => {},\n  readonly: false,\n};\n\n// NOTE: The values from SELECTORS will be part of the pros:\nconst mapStateToProps = (state) => ({\n  flags: getFeatures(state),\n});\n\n// NOTE: Functions passed from THUNKS and ACTIONS passed to the props\nconst mapDispatchToProps = (dispatch) => ({\n  edit: (id, inuse) => dispatch(editFeatureFlag(id, inuse, true)),\n  reset: () => dispatch(resetFeatureFlags(true)),\n});\n\nexport default reduxLoaded\n  ? connect(mapStateToProps, mapDispatchToProps)(FeatureFlagsReduxUI)\n  : FeatureFlagsReduxUI;\n","// NOTE This is a sample page and should either be\n// modified or removed from a real project\n\nimport React from 'react';\nimport { Container, Row, Col, Jumbotron } from 'reactstrap';\nimport FeatureFlagsUI from '../Components/FeatureFlagsUI';\nimport FeatureFlagsReduxUI from '../Components/FeatureFlagsReduxUI';\n\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col>\n            <Jumbotron>\n              <h1>Feature Flags</h1>\n              <p>\n                These are the testing pages to play with feature flags module.\n                Use the links above to change the feature flag settings.\n              </p>\n            </Jumbotron>\n            <div>\n              <h2>Local storage based (read-only):</h2>\n              <FeatureFlagsUI readonly />\n            </div>\n            <div>\n              <h2>Redux based (read-only):</h2>\n              <FeatureFlagsReduxUI readonly />\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nHome.propTypes = {};\nHome.defaultProps = {};\n","// Page that shows the application name and version from package.json file\n// Along with the git commit.\n// Note this file should be used in most applications\n// Normally there isn't a need to modify it\nimport React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\n\nconst Version = (/* props */) => (\n  <Container>\n    <Row>\n      <Col>\n        <h1>Version</h1>\n        <ul>\n          <li>\n            <strong>Application Name:</strong>\n            <span id='appNameFromPackageJson'>\n              {process.env.REACT_APP_NAME}\n            </span>\n          </li>\n          <li>\n            <strong>Version: </strong>\n            <span id='appVersionFromPackageJson'>\n              {process.env.REACT_APP_VERSION}\n            </span>\n          </li>\n          <li>\n            <strong>Git Commit: </strong>\n            <span id='gitCommitHash'>{process.env.REACT_APP_GIT_SHA}</span>\n          </li>\n        </ul>\n      </Col>\n    </Row>\n  </Container>\n);\n\nexport default Version;\n","// Page rendered when url doesn't match route in App.jsx\n\nimport React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\n\nconst FourOhFour = (/* props */) => (\n  <Container>\n    <Row>\n      <Col>\n        <h1>Page not found</h1>\n        <p>The page you requested could not be found.</p>\n      </Col>\n    </Row>\n  </Container>\n);\n\nexport default FourOhFour;\n","/* eslint-disable react/prop-types */\n// List all the components you want users to be able to call\n\nimport React from 'react';\nimport FFUI from './FeatureFlagsUI';\n\nimport FFUIRedux from './FeatureFlagsReduxUI';\n\nimport {\n  loadFeatureFlags as load,\n  reducerFeatureFlags as reducer,\n  getFeatures as get,\n  isFeatureActive as isActive,\n  resetFeatureFlags as reset,\n} from './featureFlags';\n\nexport const FeatureFlagsUI = (props) => {\n  const { onFeatureChange, readonly } = props;\n  return <FFUI onFeatureChange={onFeatureChange} readonly={readonly} />;\n};\n\nexport const FeatureFlagsReduxUI = (props) => {\n  const { onFeatureChange, readonly } = props;\n  return <FFUIRedux onFeatureChange={onFeatureChange} readonly={readonly} />;\n};\n\nexport const loadFeatureFlags = (\n  featureArray = [],\n  useRedux = false,\n  callback = () => {},\n  envVariable = 'REACT_APP_FEATURE_FLAGS'\n) => load(featureArray, useRedux, callback, envVariable);\n\nexport const reducerFeatureFlags = (state = { flags: [] }, action) =>\n  reducer(state, action);\n\nexport const getFeatures = (state = null) => get(state);\n\nexport const isFeatureActive = (id, featuresFromRedux = null) =>\n  isActive(id, featuresFromRedux);\n\nexport const resetFeatureFlags = (useRedux = false) => reset(useRedux);\n","export const COLORS = 'COLORS';\nexport const DINOS = 'DINOS';\nexport const FRUITS = 'FRUITS';\nexport const VEGGIES = 'VEGGIES';\n\nexport const featureFlagsRedux = [\n  {\n    id: FRUITS,\n    active: false,\n    description: 'Fruit list',\n  },\n  {\n    id: VEGGIES,\n    active: false,\n    description: 'Vegetable list',\n  },\n];\n\nexport const featureFlagsLocalStorage = [\n  {\n    id: COLORS,\n    active: false,\n    description: 'Color list',\n  },\n  {\n    id: DINOS,\n    inuse: false,\n    description: 'Dino list',\n  },\n];\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FeatureFlagsUI, isFeatureActive } from '../Components/index';\nimport { COLORS, DINOS } from '../FeatureFlagsConfig';\n\nexport default class FeatureFlags extends React.Component {\n  static colorList() {\n    return (\n      <div>\n        <h2>Primary Colors of Light</h2>\n        <ul>\n          <li>Red</li>\n          <li>Green</li>\n          <li>Blue</li>\n        </ul>\n      </div>\n    );\n  }\n\n  static dinoList() {\n    return (\n      <div>\n        <h2>Common Dinosaurs</h2>\n        <ul>\n          <li>Pterodactyl</li>\n          <li>Lirainosaurus</li>\n          <li>Iguanodon</li>\n        </ul>\n      </div>\n    );\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.featureChange = this.featureChange.bind(this);\n  }\n\n  featureChange = () => {\n    const { onFeatureChange } = this.props;\n    onFeatureChange();\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Feature flags set in local storage</h1>\n        <FeatureFlagsUI onFeatureChange={this.featureChange} />\n        <hr />\n        {isFeatureActive(COLORS) ? FeatureFlags.colorList() : null}\n        {isFeatureActive(DINOS) ? FeatureFlags.dinoList() : null}\n      </div>\n    );\n  }\n}\n\nFeatureFlags.propTypes = {\n  onFeatureChange: PropTypes.func,\n};\nFeatureFlags.defaultProps = {\n  onFeatureChange: () => {},\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n  getFeatures,\n  isFeatureActive,\n  FeatureFlagsReduxUI,\n} from '../Components/index';\n\nclass FeatureFlagRedux extends React.Component {\n  static fruitsList() {\n    return (\n      <div>\n        <h2>Fruits</h2>\n        <ul>\n          <li>Apples</li>\n          <li>Grapes</li>\n          <li>Oranges</li>\n        </ul>\n      </div>\n    );\n  }\n\n  static veggieList() {\n    return (\n      <div>\n        <h2>Vegetables</h2>\n        <ul>\n          <li>Broccoli</li>\n          <li>Carrots</li>\n          <li>Spinach</li>\n        </ul>\n      </div>\n    );\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {}\n\n  componentWillUnmount() {}\n\n  render() {\n    const { features } = this.props;\n    return (\n      <div>\n        <h1>Feature Flags stored in Redux store</h1>\n        <FeatureFlagsReduxUI />\n        <hr />\n        {isFeatureActive('FRUITS', features)\n          ? FeatureFlagRedux.fruitsList()\n          : null}\n        {isFeatureActive('VEGGIES', features)\n          ? FeatureFlagRedux.veggieList()\n          : null}\n      </div>\n    );\n  }\n}\n\nFeatureFlagRedux.propTypes = {\n  features: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      inuse: PropTypes.bool,\n      description: PropTypes.string,\n      original: PropTypes.bool,\n    })\n  ).isRequired,\n};\nFeatureFlagRedux.defaultProps = {};\n\n// NOTE: The values from SELECTORS will be part of the pros:\nconst mapStateToProps = (state /* , props */) => ({\n  features: getFeatures(state),\n});\n// NOTE: Functions passed from THUNKS and ACTIONS passed to the props\nconst mapDispatchToProps = (/* dispatch */) => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FeatureFlagRedux);\n","/* eslint-disable import/no-extraneous-dependencies */\n// Contains routing and any application wide items like headers, footers and navigation\n// TODO: Break this up into multiple components\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  NavLink,\n  Route,\n  Switch,\n  Redirect,\n  HashRouter as Router, // using hash router so it can be used on github pages\n} from 'react-router-dom';\n\nimport { connect } from 'react-redux';\nimport { Nav, NavItem, Container, Row, Col } from 'reactstrap';\nimport Home from './testPages/Home';\nimport Version from './testPages/Version';\nimport FourOhFour from './testPages/FourOhFour';\nimport FeatureFlag from './testPages/FeatureFlag';\nimport FeatureFlagRedux from './testPages/FeatureFlagRedux';\nimport './scss/index.scss';\nimport {\n  loadFeatureFlags,\n  isFeatureActive,\n  getFeatures,\n} from './Components/featureFlags';\nimport {\n  featureFlagsLocalStorage,\n  DINOS,\n  COLORS,\n  featureFlagsRedux,\n  FRUITS,\n  VEGGIES,\n} from './FeatureFlagsConfig';\n\n/* ************************************** */\nconst buildNav = (features) => (\n  <nav>\n    <Nav>\n      <NavItem>\n        <NavLink activeClassName='active' className='nav-link' to='/'>\n          Home\n        </NavLink>\n      </NavItem>\n\n      <NavItem>\n        <NavLink activeClassName='active' className='nav-link' to='/local'>\n          Local Storage Based Feature Flags\n        </NavLink>\n      </NavItem>\n\n      {isFeatureActive(DINOS) ? (\n        <NavItem>\n          <span className='nav-link'>LINK TO DINOS</span>\n        </NavItem>\n      ) : null}\n\n      {isFeatureActive(COLORS) ? (\n        <NavItem>\n          <span className='nav-link'>LINK TO COLORS</span>\n        </NavItem>\n      ) : null}\n\n      <NavItem>\n        <NavLink activeClassName='active' className='nav-link' to='/redux'>\n          Redux Based Feature Flags\n        </NavLink>\n      </NavItem>\n      {isFeatureActive(FRUITS, features) ? (\n        <NavItem>\n          <span className='nav-link'>LINK TO FRUITS</span>\n        </NavItem>\n      ) : null}\n\n      {isFeatureActive(VEGGIES, features) ? (\n        <NavItem>\n          <span className='nav-link'>LINK TO VEGGIES</span>\n        </NavItem>\n      ) : null}\n\n      <NavItem>\n        <NavLink activeClassName='active' className='nav-link' to='/version'>\n          Version\n        </NavLink>\n      </NavItem>\n    </Nav>\n  </nav>\n);\n\n/* ************************************** */\n\nconst router = (reRenderApp) => (\n  <Switch>\n    <Route path='/' exact>\n      <Home />\n    </Route>\n\n    <Route path='/home' exact>\n      <Redirect to='/' />\n    </Route>\n\n    <Route path='/local'>\n      <FeatureFlag onFeatureChange={reRenderApp} />\n    </Route>\n\n    <Route path='/redux'>\n      <FeatureFlagRedux />\n    </Route>\n\n    <Route path='/version'>\n      <Version />\n    </Route>\n\n    <Route path='/'>\n      <FourOhFour />\n    </Route>\n  </Switch>\n);\n\n/* ************************************** */\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.reRenderApp = this.reRenderApp.bind(this);\n  }\n\n  async componentDidMount() {\n    const { loadFeatureToRedux } = this.props;\n    loadFeatureFlags(featureFlagsLocalStorage, false, this.reRenderApp());\n    loadFeatureToRedux(featureFlagsRedux);\n  }\n\n  componentWillUnmount() {}\n\n  reRenderApp() {\n    this.forceUpdate();\n  }\n\n  render() {\n    const basename = '';\n\n    const { features } = this.props;\n    return (\n      <div>\n        <Router basename={basename}>\n          <header>{/* ENTER HEADER HERE */}</header>\n          {buildNav(features)}\n          <main>\n            <Container>\n              <Row>\n                <Col>{router(this.reRenderApp)}</Col>\n              </Row>\n            </Container>\n          </main>\n          <footer>{/* ENTER FOOTER HERE */}</footer>\n        </Router>\n      </div>\n    );\n  }\n}\nApp.propTypes = {\n  loadFeatureToRedux: PropTypes.func.isRequired,\n  features: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      inuse: PropTypes.bool,\n      description: PropTypes.string,\n      original: PropTypes.bool,\n    })\n  ).isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  features: getFeatures(state),\n});\n\n// NOTE: Functions passed from THUNKS and ACTIONS passed to the props\nconst mapDispatchToProps = (dispatch) => ({\n  loadFeatureToRedux: (features) => dispatch(loadFeatureFlags(features, true)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","/* eslint-disable import/no-extraneous-dependencies */\n/* This tells the application to load into the html object with an id of \"root\"\nNOTE: There normally isn't a reason to change this file\n*/\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport configureStore from './redux/store';\nimport App from './App';\n\nconst store = configureStore;\n\nconst rootElement = document.getElementById('root');\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootElement\n);\n"],"sourceRoot":""}