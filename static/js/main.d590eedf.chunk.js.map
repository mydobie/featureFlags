{"version":3,"sources":["Components/featureFlags.js","redux/reducers/index.js","redux/store.js","Components/uiAtoms/Checkbox.jsx","Components/uiAtoms/Button.jsx","Components/FeatureFlagsUICore.jsx","Components/FeatureFlagsUI.jsx","Components/FeatureFlagsReduxUI.jsx","testPages/Home.jsx","testPages/Version.jsx","testPages/FourOhFour.jsx","Components/index.jsx","FeatureFlagsConfig.js","testPages/FeatureFlag.jsx","testPages/FeatureFlagRedux.jsx","App.jsx","index.jsx"],"names":["FEATURE_FLAGS","FEATURE_FLAGS_ADD","FEATURE_FLAG_EDIT","FEATURE_FLAGS_RESET","loadFeatureFlags","featureArray","useRedux","callback","envVariable","flagArray","map","flag","id","active","description","original","fromProcessEnv","process","envFlagOverRides","JSON","parse","forEach","index","findIndex","f","push","newFlag","existing","type","payload","localStorage","setItem","stringify","editFeatureFlag","features","getItem","newFeatures","resetFeatureFlags","reducerFeatureFlags","state","flags","action","newFlags","getFeatures","isFeatureActive","featuresFromRedux","newFeature","find","undefined","combineReducers","exportReducer","storage","autoMergeLevel2","rootReducer","exportCreateStore","createStore","composeWithDevTools","applyMiddleware","CBox","props","label","checked","disabled","onChange","ui","CustomElement","REACT_APP_USE_UI","require","Checkbox","error","CustomInput","e","value","variant","size","name","defaultProps","CButton","children","color","onClick","Button","instructure","margin","reactstrap","FeatureFlagsUICore","featureClick","bind","featureReset","inuse","onFeatureClick","this","onFeatureReset","readonly","feature","style","fontWeight","className","target","marginTop","marginBottom","container","React","Component","FeatureFlagsUI","featureChange","onFeatureChange","connect","reduxLoaded","FeatureFlagsReduxUI","resetFeatures","edit","reset","dispatch","Home","Container","Row","Col","Jumbotron","Version","FourOhFour","get","isActive","COLORS","DINOS","FRUITS","VEGGIES","featureFlagsRedux","featureFlagsLocalStorage","FeatureFlags","envOverRide","colorList","dinoList","FeatureFlagRedux","fruitsList","veggieList","buildNav","Nav","NavItem","activeClassName","to","App","reRenderApp","a","loadFeatureToRedux","forceUpdate","basename","path","exact","store","configureStore","RenderApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d590eedf.chunk.js","sourcesContent":["export const FEATURE_FLAGS = 'featureFlags'; // key used in local storage\nexport const FEATURE_FLAGS_ADD = 'featureFlagsAdd';\nexport const FEATURE_FLAG_EDIT = 'featureFlagsEdit';\nexport const FEATURE_FLAGS_RESET = 'featureFlagsReset';\n\n/* ************** ACTIONS *************** */\nexport const loadFeatureFlags = (\n  featureArray = [],\n  useRedux = false,\n  callback = () => {},\n  envVariable = 'REACT_APP_FEATURE_FLAGS'\n) => {\n  let flagArray = [];\n\n  flagArray = featureArray.map((flag) => ({\n    id: flag.id,\n    active: flag.active || false,\n    description: flag.description,\n    original: flag.active || false,\n  }));\n\n  // eslint-disable-next-line no-unused-vars\n  const fromProcessEnv = process.env[envVariable];\n  const envFlagOverRides = fromProcessEnv ? JSON.parse(fromProcessEnv) : [];\n  envFlagOverRides.forEach((flag) => {\n    const index = flagArray.findIndex((f) => f.id === flag.id);\n    if (index === -1) {\n      flagArray.push({\n        id: flag.id,\n        active: flag.active || false,\n        description: flag.description,\n        original: flag.active || false,\n      });\n    } else {\n      const newFlag = { ...flag };\n      const existing = flagArray[index];\n      newFlag.description = flag.description || existing.description;\n      newFlag.active = flag.active || existing.active;\n      newFlag.original = newFlag.active;\n      flagArray[index] = newFlag;\n    }\n  });\n  if (useRedux) {\n    return { type: FEATURE_FLAGS_ADD, payload: flagArray };\n  }\n  callback(flagArray);\n  return localStorage.setItem(FEATURE_FLAGS, JSON.stringify(flagArray));\n};\n\nexport const editFeatureFlag = (id, active, useRedux = false) => {\n  if (useRedux) {\n    return { type: FEATURE_FLAG_EDIT, payload: { id, active } };\n  }\n  const features = JSON.parse(localStorage.getItem(FEATURE_FLAGS));\n  const newFeatures = features.map((flag) => {\n    if (flag.id === id) {\n      const newFlag = { ...flag, active };\n      return newFlag;\n    }\n    return flag;\n  });\n  localStorage.setItem(FEATURE_FLAGS, JSON.stringify(newFeatures));\n  return newFeatures;\n};\n\nexport const resetFeatureFlags = (useRedux = false) => {\n  if (useRedux) {\n    return { type: FEATURE_FLAGS_RESET };\n  }\n  const features = JSON.parse(localStorage.getItem(FEATURE_FLAGS));\n  const newFeatures = features.map((flag) => ({\n    ...flag,\n    active: flag.original,\n  }));\n  localStorage.setItem(FEATURE_FLAGS, JSON.stringify(newFeatures));\n  return newFeatures;\n};\n\n/* ************** REDUCERS *************** */\nexport const reducerFeatureFlags = (state = { flags: [] }, action) => {\n  switch (action.type) {\n    case FEATURE_FLAGS_ADD: {\n      return { ...state, flags: action.payload };\n    }\n    case FEATURE_FLAG_EDIT: {\n      const { id, active } = action.payload;\n      const newFlags = [...state.flags];\n      const index = newFlags.findIndex((flag) => flag.id === id);\n\n      if (index === -1) {\n        return state;\n      }\n      newFlags[index].active = active;\n      return { ...state, flags: newFlags };\n    }\n    case FEATURE_FLAGS_RESET: {\n      const newFlags = state.flags.map((flag) => ({\n        ...flag,\n        active: flag.original,\n      }));\n      return { ...state, flags: newFlags };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\n/* ******************* SELECTORS ************************ */\nexport const getFeatures = (state = null) => {\n  if (state === null) {\n    return JSON.parse(localStorage.getItem(FEATURE_FLAGS));\n  }\n  return state.reducerFeatureFlags.flags;\n};\n\nexport const isFeatureActive = (id, featuresFromRedux = null) => {\n  let features = featuresFromRedux;\n  if (features === null) {\n    features = getFeatures();\n  }\n  if (!features) return undefined;\n  const newFeature = features.find((flag) => flag.id === id);\n\n  return newFeature === undefined ? undefined : newFeature.active;\n};\n","/* eslint-disable import/no-extraneous-dependencies */\nimport { combineReducers } from 'redux';\nimport { reducerFeatureFlags } from '../../Components/featureFlags';\n\n// Import each reducer and then add it to the object param of combineReducers.\n\nexport default combineReducers({ reducerFeatureFlags });\n","/*\nThis file creates the redux store.\nThere normally isn't a need to modify this file\n*/\n\nimport { createStore, applyMiddleware } from 'redux';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './reducers/index';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  stateReconciler: autoMergeLevel2,\n};\nlet exportReducer = rootReducer;\n\nif (process.env.REACT_APP_USE_LOCAL_STORAGE === 'true') {\n  exportReducer = persistReducer(persistConfig, rootReducer);\n}\nconst exportCreateStore = () =>\n  createStore(exportReducer, composeWithDevTools(applyMiddleware()));\n\nexport default exportCreateStore;\n","/* eslint-disable import/no-unresolved */\n/* eslint-disable import/no-extraneous-dependencies */\n/* eslint-disable no-throw-literal */\n/* eslint-disable global-require */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CBox = (props) => {\n  const { id, label, checked, disabled, onChange, ui } = props;\n\n  let CustomElement = <div>The alert component cannot be displayed.</div>;\n  let type;\n\n  try {\n    // Code to skip to reactstrap\n    if (\n      (process.env.REACT_APP_USE_UI &&\n        process.env.REACT_APP_USE_UI !== 'instructure') ||\n      (ui && ui !== 'instructure')\n    ) {\n      throw 'Purposely skipping Instructure UI and using reactstrap';\n    }\n\n    // Import Instructure's component\n    require.resolve('@instructure/ui-checkbox');\n    const { Checkbox } = require('@instructure/ui-checkbox');\n\n    CustomElement = Checkbox;\n    type = 'instructure';\n  } catch (error) {\n    try {\n      // Import reactstrap's component\n      require.resolve('reactstrap');\n      const { CustomInput } = require('reactstrap');\n      CustomElement = CustomInput; // NOTE: This line is causing propTypes errors in console\n      type = 'reactstrap';\n    } catch (e) {\n      //  console.log('Instructor nor reactstrap UI object available: ', e);\n    }\n  }\n\n  const instructure = (\n    <CustomElement\n      label={label}\n      value='small'\n      variant='toggle'\n      size='small'\n      disabled={disabled}\n      checked={checked}\n      onChange={(e) => {\n        onChange(e);\n      }}\n    />\n  );\n\n  const reactstrap = (\n    <CustomElement\n      type='switch'\n      id={id}\n      name='customSwitch'\n      label={label}\n      checked={checked}\n      disabled={disabled}\n      onChange={(e) => {\n        onChange(e);\n      }}\n    />\n  );\n  return type === 'instructure' ? instructure : reactstrap;\n};\n\nCBox.propTypes = {\n  id: PropTypes.string,\n  label: PropTypes.string,\n  checked: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onChange: PropTypes.func,\n  ui: PropTypes.string,\n};\nCBox.defaultProps = {\n  id: 'missingId',\n  label: 'I am a switch label',\n  checked: false,\n  disabled: false,\n  onChange: (/* event */) => {},\n  ui: undefined,\n};\n\nexport default CBox;\n","/* eslint-disable import/no-unresolved */\n/* eslint-disable import/no-extraneous-dependencies */\n/* eslint-disable no-throw-literal */\n/* eslint-disable global-require */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CButton = (props) => {\n  const { id, children, color, onClick, ui } = props;\n\n  let CustomElement = <div>The alert component cannot be displayed.</div>;\n  let type;\n\n  try {\n    // Code to skip to reactstrap\n    if (\n      (process.env.REACT_APP_USE_UI &&\n        process.env.REACT_APP_USE_UI !== 'instructure') ||\n      (ui && ui !== 'instructure')\n    ) {\n      throw 'Purposely skipping Instructure UI and using reactstrap';\n    }\n\n    // Import Instructure's component\n    require.resolve('@instructure/ui-buttons');\n    const { Button } = require('@instructure/ui-buttons');\n\n    CustomElement = Button;\n    type = 'instructure';\n  } catch (error) {\n    try {\n      // Import reactstrap's component\n      require.resolve('reactstrap');\n      const { Button } = require('reactstrap');\n      CustomElement = Button; // NOTE: This line is causing propTypes errors in console\n      type = 'reactstrap';\n    } catch (e) {\n      //  console.log('Instructor nor reactstrap UI object available: ', e);\n    }\n  }\n\n  const instructure = (\n    <CustomElement\n      id={id}\n      margin='small'\n      color={color}\n      onClick={(e) => {\n        onClick(e);\n      }}\n    >\n      {`${children}`}\n    </CustomElement>\n  );\n\n  const reactstrap = (\n    <CustomElement\n      id={id}\n      margin='small'\n      color={color}\n      onClick={(e) => {\n        onClick(e);\n      }}\n    >\n      {`${children}`}\n    </CustomElement>\n  );\n  return type === 'instructure' ? instructure : reactstrap;\n};\n\nCButton.propTypes = {\n  id: PropTypes.string,\n  color: PropTypes.string,\n  children: PropTypes.string,\n  onClick: PropTypes.func,\n  ui: PropTypes.string,\n};\nCButton.defaultProps = {\n  id: 'missingId',\n  color: 'success',\n  children: 'Button text',\n  onClick: (/* event */) => {},\n  ui: undefined,\n};\n\nexport default CButton;\n","/* eslint-disable global-require */\n/* eslint-disable import/no-extraneous-dependencies */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Checkbox from './uiAtoms/Checkbox';\nimport Button from './uiAtoms/Button';\n\nexport default class FeatureFlagsUICore extends React.Component {\n  constructor(props) {\n    super(props);\n    // this.state = { features: props.features };\n    this.featureClick = this.featureClick.bind(this);\n    this.featureReset = this.featureReset.bind(this);\n  }\n\n  featureClick(id, inuse) {\n    const { onFeatureClick } = this.props;\n    onFeatureClick(id, inuse);\n  }\n\n  featureReset() {\n    const { onFeatureReset } = this.props;\n    onFeatureReset();\n  }\n\n  container() {\n    const { features, readonly, ui } = this.props;\n    return (\n      <div>\n        <h2>Feature Flags</h2>\n        {features &&\n          features.map((feature) => (\n            <div\n              key={feature.id}\n              style={{ fontWeight: feature.active ? 'bold' : '' }}\n              className='customInputItem'\n            >\n              <Checkbox\n                id={feature.id}\n                label={feature.description}\n                checked={feature.active}\n                disabled={readonly}\n                onChange={(e) => {\n                  this.featureClick(feature.id, e.target.checked);\n                }}\n                ui={ui}\n              />\n            </div>\n          ))}\n        <div style={{ marginTop: '20px', marginBottom: '20px' }}>\n          {readonly ? null : (\n            <Button\n              id='resetFeatureFlags'\n              color='success'\n              onClick={() => {\n                this.featureReset();\n              }}\n              ui={ui}\n            >\n              Reset Flags\n            </Button>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return this.container();\n  }\n}\n\nFeatureFlagsUICore.propTypes = {\n  features: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      description: PropTypes.string,\n      inuse: PropTypes.bool,\n      original: PropTypes.bool,\n    })\n  ),\n  onFeatureClick: PropTypes.func,\n  onFeatureReset: PropTypes.func,\n  readonly: PropTypes.bool,\n  ui: PropTypes.string,\n};\nFeatureFlagsUICore.defaultProps = {\n  features: [],\n  onFeatureClick: () => {},\n  onFeatureReset: () => {},\n  readonly: false,\n  ui: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FeatureFlagsCore from './FeatureFlagsUICore';\nimport {\n  editFeatureFlag,\n  resetFeatureFlags,\n  getFeatures,\n} from './featureFlags';\n\nexport default class FeatureFlagsUI extends React.Component {\n  constructor(props) {\n    super(props);\n    this.featureChange = this.featureChange.bind(this);\n    this.featureReset = this.featureReset.bind(this);\n  }\n\n  featureChange(id, checked) {\n    const { onFeatureChange } = this.props;\n    editFeatureFlag(id, checked);\n    onFeatureChange(this.features());\n  }\n\n  featureReset() {\n    const { onFeatureChange } = this.props;\n    resetFeatureFlags();\n    onFeatureChange(this.features());\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  features() {\n    return getFeatures();\n  }\n\n  render() {\n    const { readonly, ui } = this.props;\n    return (\n      <FeatureFlagsCore\n        onFeatureClick={this.featureChange}\n        onFeatureReset={this.featureReset}\n        features={this.features()}\n        readonly={readonly}\n        ui={ui}\n      />\n    );\n  }\n}\n\nFeatureFlagsUI.propTypes = {\n  onFeatureChange: PropTypes.func,\n  readonly: PropTypes.bool,\n  ui: PropTypes.string,\n};\nFeatureFlagsUI.defaultProps = {\n  onFeatureChange: () => {},\n  readonly: false,\n  ui: undefined,\n};\n","/* eslint-disable global-require */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FeatureFlagsCore from './FeatureFlagsUICore';\nimport {\n  getFeatures,\n  editFeatureFlag,\n  resetFeatureFlags,\n} from './featureFlags';\n\nlet reduxLoaded = false;\nlet connect;\ntry {\n  const redux = require('react-redux');\n  connect = redux.connect;\n  reduxLoaded = true;\n  // eslint-disable-next-line no-empty\n} catch (e) {}\n\nclass FeatureFlagsReduxUI extends React.Component {\n  constructor(props) {\n    super(props);\n    this.featureChange = this.featureChange.bind(this);\n    this.resetFeatures = this.resetFeatures.bind(this);\n    this.state = {};\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  featureChange(id, checked) {\n    const { edit, onFeatureChange, flags } = this.props;\n    edit(id, checked);\n    onFeatureChange(flags);\n  }\n\n  resetFeatures() {\n    const { reset, onFeatureChange, flags } = this.props;\n    reset(onFeatureChange(flags));\n  }\n\n  render() {\n    const { flags, readonly, ui } = this.props;\n    return (\n      <FeatureFlagsCore\n        features={flags}\n        onFeatureClick={this.featureChange}\n        onFeatureReset={this.resetFeatures}\n        readonly={readonly}\n        ui={ui}\n      />\n    );\n  }\n}\n\nFeatureFlagsReduxUI.propTypes = {\n  onFeatureChange: PropTypes.func,\n  edit: PropTypes.func.isRequired,\n  reset: PropTypes.func.isRequired,\n  flags: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      inuse: PropTypes.bool,\n      description: PropTypes.string,\n      original: PropTypes.bool,\n    })\n  ).isRequired,\n  readonly: PropTypes.bool,\n  ui: PropTypes.string,\n};\nFeatureFlagsReduxUI.defaultProps = {\n  onFeatureChange: () => {},\n  readonly: false,\n  ui: undefined,\n};\n\n// NOTE: The values from SELECTORS will be part of the pros:\nconst mapStateToProps = (state) => ({\n  flags: getFeatures(state),\n});\n\n// NOTE: Functions passed from THUNKS and ACTIONS passed to the props\nconst mapDispatchToProps = (dispatch) => ({\n  edit: (id, inuse) => dispatch(editFeatureFlag(id, inuse, true)),\n  reset: () => dispatch(resetFeatureFlags(true)),\n});\n\nexport default reduxLoaded\n  ? connect(mapStateToProps, mapDispatchToProps)(FeatureFlagsReduxUI)\n  : FeatureFlagsReduxUI;\n","// NOTE This is a sample page and should either be\n// modified or removed from a real project\n\nimport React from 'react';\nimport { Container, Row, Col, Jumbotron } from 'reactstrap';\nimport FeatureFlagsUI from '../Components/FeatureFlagsUI';\nimport FeatureFlagsReduxUI from '../Components/FeatureFlagsReduxUI';\n\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col>\n            <Jumbotron>\n              <h1>Feature Flags</h1>\n              <p>\n                These are the testing pages to play with feature flags module.\n                Use the links above to change the feature flag settings.\n              </p>\n            </Jumbotron>\n            <div>\n              <h2>Local storage based (read-only):</h2>\n              <FeatureFlagsUI readonly />\n            </div>\n            <div>\n              <h2>Redux based (read-only):</h2>\n              <FeatureFlagsReduxUI readonly />\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nHome.propTypes = {};\nHome.defaultProps = {};\n","// Page that shows the application name and version from package.json file\n// Along with the git commit.\n// Note this file should be used in most applications\n// Normally there isn't a need to modify it\nimport React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\n\nconst Version = (/* props */) => (\n  <Container>\n    <Row>\n      <Col>\n        <h1>Version</h1>\n        <ul>\n          <li>\n            <strong>Application Name:</strong>\n            <span id='appNameFromPackageJson'>\n              {process.env.REACT_APP_NAME}\n            </span>\n          </li>\n          <li>\n            <strong>Version: </strong>\n            <span id='appVersionFromPackageJson'>\n              {process.env.REACT_APP_VERSION}\n            </span>\n          </li>\n          <li>\n            <strong>Git Commit: </strong>\n            <span id='gitCommitHash'>{process.env.REACT_APP_GIT_SHA}</span>\n          </li>\n        </ul>\n      </Col>\n    </Row>\n  </Container>\n);\n\nexport default Version;\n","// Page rendered when url doesn't match route in App.jsx\n\nimport React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\n\nconst FourOhFour = (/* props */) => (\n  <Container>\n    <Row>\n      <Col>\n        <h1>Page not found</h1>\n        <p>The page you requested could not be found.</p>\n      </Col>\n    </Row>\n  </Container>\n);\n\nexport default FourOhFour;\n","/* eslint-disable react/prop-types */\n// List all the components you want users to be able to call\n\nimport React from 'react';\nimport FFUI from './FeatureFlagsUI';\n\nimport FFUIRedux from './FeatureFlagsReduxUI';\n\nimport {\n  loadFeatureFlags as load,\n  reducerFeatureFlags as reducer,\n  getFeatures as get,\n  isFeatureActive as isActive,\n  resetFeatureFlags as reset,\n} from './featureFlags';\n\nexport const FeatureFlagsUI = (props) => {\n  const { onFeatureChange, readonly, ui } = props;\n  return <FFUI onFeatureChange={onFeatureChange} readonly={readonly} ui={ui} />;\n};\n\nexport const FeatureFlagsReduxUI = (props) => {\n  const { onFeatureChange, readonly, ui } = props;\n  return (\n    <FFUIRedux onFeatureChange={onFeatureChange} readonly={readonly} ui={ui} />\n  );\n};\n\nexport const loadFeatureFlags = (\n  featureArray = [],\n  useRedux = false,\n  callback = () => {},\n  envVariable = 'REACT_APP_FEATURE_FLAGS'\n) => load(featureArray, useRedux, callback, envVariable);\n\nexport const reducerFeatureFlags = (state = { flags: [] }, action) =>\n  reducer(state, action);\n\nexport const getFeatures = (state = null) => get(state);\n\nexport const isFeatureActive = (id, featuresFromRedux = null) =>\n  isActive(id, featuresFromRedux);\n\nexport const resetFeatureFlags = (useRedux = false) => reset(useRedux);\n","export const COLORS = 'COLORS';\nexport const DINOS = 'DINOS';\nexport const FRUITS = 'FRUITS';\nexport const VEGGIES = 'VEGGIES';\n\nexport const featureFlagsRedux = [\n  {\n    id: FRUITS,\n    active: false,\n    description: 'Fruit list',\n  },\n  {\n    id: VEGGIES,\n    active: false,\n    description: 'Vegetable list',\n  },\n];\n\nexport const featureFlagsLocalStorage = [\n  {\n    id: COLORS,\n    active: false,\n    description: 'Color list',\n  },\n  {\n    id: DINOS,\n    inuse: false,\n    description: 'Dino list',\n  },\n];\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Row, Col } from 'reactstrap';\nimport { FeatureFlagsUI, isFeatureActive } from '../Components/index';\nimport { COLORS, DINOS } from '../FeatureFlagsConfig';\n\nexport default class FeatureFlags extends React.Component {\n  static colorList() {\n    return (\n      <div>\n        <h2>Primary Colors of Light</h2>\n        <ul>\n          <li>Red</li>\n          <li>Green</li>\n          <li>Blue</li>\n        </ul>\n      </div>\n    );\n  }\n\n  static dinoList() {\n    return (\n      <div>\n        <h2>Common Dinosaurs</h2>\n        <ul>\n          <li>Pterodactyl</li>\n          <li>Lirainosaurus</li>\n          <li>Iguanodon</li>\n        </ul>\n      </div>\n    );\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.featureChange = this.featureChange.bind(this);\n  }\n\n  featureChange = () => {\n    const { onFeatureChange } = this.props;\n    onFeatureChange();\n  };\n\n  render() {\n    const envOverRide = process.env.REACT_APP_USE_UI;\n\n    return (\n      <div>\n        <h1>Feature flags set in local storage</h1>\n        <Row>\n          <Col>\n            {envOverRide ? null : (\n              <h2>\n                Instructure version:\n                <br />\n              </h2>\n            )}\n            <FeatureFlagsUI onFeatureChange={this.featureChange} />\n          </Col>\n          {envOverRide ? null : (\n            <Col>\n              <h2>\n                Reactstrap version:\n                <br />\n              </h2>\n              <FeatureFlagsUI\n                ui='reactstrap'\n                onFeatureChange={this.featureChange}\n              />\n            </Col>\n          )}\n        </Row>\n\n        <hr />\n        {isFeatureActive(COLORS) ? FeatureFlags.colorList() : null}\n        {isFeatureActive(DINOS) ? FeatureFlags.dinoList() : null}\n      </div>\n    );\n  }\n}\n\nFeatureFlags.propTypes = {\n  onFeatureChange: PropTypes.func,\n};\nFeatureFlags.defaultProps = {\n  onFeatureChange: () => {},\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { Row, Col } from 'reactstrap';\nimport {\n  getFeatures,\n  isFeatureActive,\n  FeatureFlagsReduxUI,\n} from '../Components/index';\n\nclass FeatureFlagRedux extends React.Component {\n  static fruitsList() {\n    return (\n      <div>\n        <h2>Fruits</h2>\n        <ul>\n          <li>Apples</li>\n          <li>Grapes</li>\n          <li>Oranges</li>\n        </ul>\n      </div>\n    );\n  }\n\n  static veggieList() {\n    return (\n      <div>\n        <h2>Vegetables</h2>\n        <ul>\n          <li>Broccoli</li>\n          <li>Carrots</li>\n          <li>Spinach</li>\n        </ul>\n      </div>\n    );\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {}\n\n  componentWillUnmount() {}\n\n  render() {\n    const { features } = this.props;\n    const envOverRide = process.env.REACT_APP_USE_UI;\n\n    return (\n      <div>\n        <h1>Feature Flags stored in Redux store</h1>\n        <Row>\n          <Col>\n            {envOverRide ? null : (\n              <h2>\n                Instructure version:\n                <br />\n              </h2>\n            )}\n            <FeatureFlagsReduxUI />\n          </Col>\n          {envOverRide ? null : (\n            <Col>\n              <h2>\n                Reactstrap version:\n                <br />\n              </h2>\n              <FeatureFlagsReduxUI ui='reactstrap' />\n            </Col>\n          )}\n        </Row>\n\n        <hr />\n        {isFeatureActive('FRUITS', features)\n          ? FeatureFlagRedux.fruitsList()\n          : null}\n        {isFeatureActive('VEGGIES', features)\n          ? FeatureFlagRedux.veggieList()\n          : null}\n      </div>\n    );\n  }\n}\n\nFeatureFlagRedux.propTypes = {\n  features: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      inuse: PropTypes.bool,\n      description: PropTypes.string,\n      original: PropTypes.bool,\n    })\n  ).isRequired,\n};\nFeatureFlagRedux.defaultProps = {};\n\n// NOTE: The values from SELECTORS will be part of the pros:\nconst mapStateToProps = (state /* , props */) => ({\n  features: getFeatures(state),\n});\n// NOTE: Functions passed from THUNKS and ACTIONS passed to the props\nconst mapDispatchToProps = (/* dispatch */) => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FeatureFlagRedux);\n","/* eslint-disable import/no-extraneous-dependencies */\n// Contains routing and any application wide items like headers, footers and navigation\n// TODO: Break this up into multiple components\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  NavLink,\n  Route,\n  Switch,\n  Redirect,\n  HashRouter as Router, // using hash router so it can be used on github pages\n} from 'react-router-dom';\n\nimport { connect } from 'react-redux';\nimport { Nav, NavItem, Container, Row, Col } from 'reactstrap';\nimport Home from './testPages/Home';\nimport Version from './testPages/Version';\nimport FourOhFour from './testPages/FourOhFour';\nimport FeatureFlag from './testPages/FeatureFlag';\nimport FeatureFlagRedux from './testPages/FeatureFlagRedux';\nimport './scss/index.scss';\nimport {\n  loadFeatureFlags,\n  isFeatureActive,\n  getFeatures,\n} from './Components/featureFlags';\nimport {\n  featureFlagsLocalStorage,\n  DINOS,\n  COLORS,\n  featureFlagsRedux,\n  FRUITS,\n  VEGGIES,\n} from './FeatureFlagsConfig';\n\nrequire('@instructure/canvas-theme');\n\n/* ************************************** */\nconst buildNav = (features) => (\n  <nav>\n    <Nav>\n      <NavItem>\n        <NavLink activeClassName='active' className='nav-link' to='/'>\n          Home\n        </NavLink>\n      </NavItem>\n\n      <NavItem>\n        <NavLink activeClassName='active' className='nav-link' to='/local'>\n          Local Storage Based Feature Flags\n        </NavLink>\n      </NavItem>\n\n      {isFeatureActive(DINOS) ? (\n        <NavItem>\n          <span className='nav-link'>LINK TO DINOS</span>\n        </NavItem>\n      ) : null}\n\n      {isFeatureActive(COLORS) ? (\n        <NavItem>\n          <span className='nav-link'>LINK TO COLORS</span>\n        </NavItem>\n      ) : null}\n\n      <NavItem>\n        <NavLink activeClassName='active' className='nav-link' to='/redux'>\n          Redux Based Feature Flags\n        </NavLink>\n      </NavItem>\n      {isFeatureActive(FRUITS, features) ? (\n        <NavItem>\n          <span className='nav-link'>LINK TO FRUITS</span>\n        </NavItem>\n      ) : null}\n\n      {isFeatureActive(VEGGIES, features) ? (\n        <NavItem>\n          <span className='nav-link'>LINK TO VEGGIES</span>\n        </NavItem>\n      ) : null}\n\n      <NavItem>\n        <NavLink activeClassName='active' className='nav-link' to='/version'>\n          Version\n        </NavLink>\n      </NavItem>\n    </Nav>\n  </nav>\n);\n\n/* ************************************** */\n\nconst router = (reRenderApp) => (\n  <Switch>\n    <Route path='/' exact>\n      <Home />\n    </Route>\n\n    <Route path='/home' exact>\n      <Redirect to='/' />\n    </Route>\n\n    <Route path='/local'>\n      <FeatureFlag onFeatureChange={reRenderApp} />\n    </Route>\n\n    <Route path='/redux'>\n      <FeatureFlagRedux />\n    </Route>\n\n    <Route path='/version'>\n      <Version />\n    </Route>\n\n    <Route path='/'>\n      <FourOhFour />\n    </Route>\n  </Switch>\n);\n\n/* ************************************** */\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.reRenderApp = this.reRenderApp.bind(this);\n  }\n\n  async componentDidMount() {\n    const { loadFeatureToRedux } = this.props;\n    loadFeatureFlags(featureFlagsLocalStorage, false, this.reRenderApp());\n    loadFeatureToRedux(featureFlagsRedux);\n  }\n\n  componentWillUnmount() {}\n\n  reRenderApp() {\n    this.forceUpdate();\n  }\n\n  render() {\n    const basename = '';\n\n    const { features } = this.props;\n    return (\n      <div>\n        <Router basename={basename}>\n          <header>{/* ENTER HEADER HERE */}</header>\n          {buildNav(features)}\n          <main>\n            <Container>\n              <Row>\n                <Col>{router(this.reRenderApp)}</Col>\n              </Row>\n            </Container>\n          </main>\n          <footer>{/* ENTER FOOTER HERE */}</footer>\n        </Router>\n      </div>\n    );\n  }\n}\nApp.propTypes = {\n  loadFeatureToRedux: PropTypes.func.isRequired,\n  features: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      inuse: PropTypes.bool,\n      description: PropTypes.string,\n      original: PropTypes.bool,\n    })\n  ).isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  features: getFeatures(state),\n});\n\n// NOTE: Functions passed from THUNKS and ACTIONS passed to the props\nconst mapDispatchToProps = (dispatch) => ({\n  loadFeatureToRedux: (features) => dispatch(loadFeatureFlags(features, true)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","/* eslint-disable react/jsx-filename-extension */\n/* This tells the application to load into the html object with an id of \"root\"\nNOTE: There normally isn't a reason to change this file\n*/\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { persistStore } from 'redux-persist';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport configureStore from './redux/store';\nimport App from './App';\nimport './scss/index.scss';\n\nconst store = configureStore();\n\nlet RenderApp = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nif (process.env.REACT_APP_USE_LOCAL_STORAGE === 'true') {\n  const persistor = persistStore(store);\n\n  RenderApp = (\n    <Provider store={store}>\n      <PersistGate loading={<div>Loading...</div>} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  );\n}\n\nReactDOM.render(RenderApp, document.getElementById('root'));\n"],"sourceRoot":""}